"Problem","Package","File","Priority","Line","Description","Rule set","Rule"
"1","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","88","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","4","112","Unnecessary qualifier 'Decorators': 'ofFunction' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"3","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","4","150","Unnecessary qualifier 'Decorators': 'ofCompletionStage' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"4","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","175","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"5","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","227","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"6","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","4","265","Unnecessary qualifier 'Decorators': 'ofCompletionStage' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"7","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","290","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"8","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","4","353","Unnecessary qualifier 'Decorators': 'ofCompletionStage' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"9","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","378","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"10","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","4","411","Unnecessary qualifier 'Decorators': 'ofCheckedFunction' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"11","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","453","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"12","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","506","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"13","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/main/java/io/github/resilience4j/decorators/Decorators.java","1","632","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/test/java/io/github/resilience4j/decorators/DecoratorsTest.java","3","212","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/test/java/io/github/resilience4j/decorators/DecoratorsTest.java","3","231","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"3","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/test/java/io/github/resilience4j/decorators/DecoratorsTest.java","3","250","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"4","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-all/src/test/java/io/github/resilience4j/decorators/DecoratorsTest.java","3","272","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.bulkhead.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/bulkhead/annotation/Bulkhead.java","3","10","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.bulkhead.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/bulkhead/annotation/Bulkhead.java","3","11","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circuitbreaker.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/circuitbreaker/annotation/CircuitBreaker.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.circuitbreaker.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/circuitbreaker/annotation/CircuitBreaker.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micrometer.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/micrometer/annotation/Timer.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micrometer.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/micrometer/annotation/Timer.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/ratelimiter/annotation/RateLimiter.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.ratelimiter.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/ratelimiter/annotation/RateLimiter.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.retry.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/retry/annotation/Retry.java","3","26","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.retry.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/retry/annotation/Retry.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.timelimiter.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/timelimiter/annotation/TimeLimiter.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.timelimiter.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-annotations/src/main/java/io/github/resilience4j/timelimiter/annotation/TimeLimiter.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.bulkhead.concurrent","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jcstress/java/io/github/resilience4j/bulkhead/concurrent/ConcurrentBulkheadTest.java","4","27","Unused import 'org.openjdk.jcstress.annotations.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","4","22","Unused import 'org.openjdk.jmh.annotations.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","75","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","76","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","84","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","85","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","93","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"7","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/jmh/java/io/github/resilience4j/bulkhead/BulkheadBenchmark.java","3","94","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/Bulkhead.java","4","28","Unused import 'io.github.resilience4j.core.functions.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/Bulkhead.java","3","107","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"3","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/Bulkhead.java","3","136","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/BulkheadConfig.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/BulkheadFullException.java","1","24","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/BulkheadRegistry.java","3","315","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadConfig.java","1","41","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadConfig.java","4","188","Unnecessary qualifier 'Arrays': 'stream' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistry.java","3","339","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkhead.java","3","158","Thrown exception does not preserve the stack trace of exception 'rejected' on all code paths","Best Practices","PreserveStackTrace"
"2","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkhead.java","3","187","Thrown exception does not preserve the stack trace of exception 'rejected' on all code paths","Best Practices","PreserveStackTrace"
"3","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkhead.java","1","258","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"4","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkhead.java","3","296","Avoid unnecessary constructors - the compiler will generate these for you","Code Style","UnnecessaryConstructor"
"1","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkhead.java","2","59","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"2","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkhead.java","1","249","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkhead.java","3","284","Avoid unnecessary constructors - the compiler will generate these for you","Code Style","UnnecessaryConstructor"
"1","io.github.resilience4j.bulkhead.utils","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/main/java/io/github/resilience4j/bulkhead/utils/MetricNames.java","1","3","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/BulkheadRegistryTest.java","4","23","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/BulkheadRegistryTest.java","1","232","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/BulkheadRegistryTest.java","3","235","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/BulkheadRegistryTest.java","3","239","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"5","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/BulkheadRegistryTest.java","3","243","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistryTest.java","4","24","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistryTest.java","1","239","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistryTest.java","3","243","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistryTest.java","3","247","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"5","io.github.resilience4j.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistryTest.java","3","252","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkheadTest.java","4","24","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkheadTest.java","3","139","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkheadTest.java","3","142","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/FixedThreadPoolBulkheadTest.java","3","145","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkheadTest.java","4","26","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkheadTest.java","3","548","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkheadTest.java","3","551","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.bulkhead.internal","/workspaces/design-evaluation/resilience4j/resilience4j-bulkhead/src/test/java/io/github/resilience4j/bulkhead/internal/SemaphoreBulkheadTest.java","3","554","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/main/java/io/github/resilience4j/cache/CacheRegistryStore.java","3","27","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.cache.internal","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/main/java/io/github/resilience4j/cache/internal/CacheImpl.java","2","81","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"2","io.github.resilience4j.cache.internal","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/main/java/io/github/resilience4j/cache/internal/CacheImpl.java","2","91","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"3","io.github.resilience4j.cache.internal","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/main/java/io/github/resilience4j/cache/internal/CacheImpl.java","3","98","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.cache.internal","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/main/java/io/github/resilience4j/cache/internal/CacheImpl.java","1","128","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","52","The JUnit 4 test method name 'computeIfAbsent_cacheHit_mappingFunctionNotInvoked' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"2","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","65","The JUnit 4 test method name 'computeIfAbsent_cacheMiss_mappingFunctionInvoked' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"3","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","78","The JUnit 4 test method name 'computeIfAbsent_cacheMiss_mappingFunctionReturnsNull_returnOldValue' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"4","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","91","The JUnit 4 test method name 'computeIfAbsent_cacheThrowsException_throwsUnwrappedEntryProcessorException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"5","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","108","The JUnit 4 test method name 'putIfAbsent_cacheHit_noCacheUpdate' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"6","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","121","The JUnit 4 test method name 'putIfAbsent_cacheMiss_updatesCache' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"7","io.github.resilience4j.cache","/workspaces/design-evaluation/resilience4j/resilience4j-cache/src/test/java/io/github/resilience4j/cache/CacheRegistryStoreTest.java","1","134","The JUnit 4 test method name 'putIfAbsent_cacheThrowsException_throwsUnwrappedEntryProcessorException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","4","21","Unused import 'org.openjdk.jmh.annotations.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","79","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","80","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","88","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","89","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","97","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"7","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","98","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"8","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","106","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"9","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/jmh/java/io/github/resilience4j/circuitbreaker/CircuitBreakerBenchmark.java","3","107","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CallNotPermittedException.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreaker.java","4","21","Unused import 'io.github.resilience4j.circuitbreaker.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreaker.java","4","24","Unused import 'io.github.resilience4j.core.functions.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreaker.java","4","902","Unnecessary qualifier 'StateTransition': 'values' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java","1","38","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java","1","235","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfig.java","3","346","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry.java","3","309","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerMetrics.java","1","35","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","4","25","Unused import 'io.github.resilience4j.circuitbreaker.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","2","254","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"3","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","2","392","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"4","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","2","403","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"5","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","3","404","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"6","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","2","405","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"7","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","2","408","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"8","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","1","511","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"9","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerStateMachine.java","3","1102","Avoid assignments in operands","Error Prone","AssignmentInOperand"
"1","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/SchedulerFactory.java","1","6","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/internal/SchedulerFactory.java","1","8","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker.utils","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/utils/CircuitBreakerResultUtils.java","1","26","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker.utils","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/main/java/io/github/resilience4j/circuitbreaker/utils/MetricNames.java","1","3","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","3","506","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","1","514","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","1","518","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"4","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","1","522","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"5","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","1","539","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"6","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerConfigTest.java","3","539","Exceptions should not extend java.lang.Error","Design","DoNotExtendJavaLangError"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerEventPublisherTest.java","3","144","Avoid unused private methods such as 'logEventType(CircuitBreakerEvent)'.","Best Practices","UnusedPrivateMethod"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerEventPublisherTest.java","2","145","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistryTest.java","4","23","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistryTest.java","1","398","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistryTest.java","3","402","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistryTest.java","3","406","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"5","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerRegistryTest.java","3","410","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerTest.java","3","915","Lambda expression could be written as a method reference: `decoratedFuture::get`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerTest.java","3","916","Lambda expression could be written as a method reference: `decoratedFuture::get`","Code Style","LambdaCanBeMethodReference"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerTest.java","3","917","Lambda expression could be written as a method reference: `decoratedFuture::get`","Code Style","LambdaCanBeMethodReference"
"4","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerTest.java","3","941","Lambda expression could be written as a method reference: `supplier::get`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerResultHandlingTest.java","3","18","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/internal/CircuitBreakerResultHandlingTest.java","3","38","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/internal/InMemoryCircuitBreakerRegistryTest.java","3","121","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/internal/InMemoryCircuitBreakerRegistryTest.java","3","124","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.circuitbreaker.internal","/workspaces/design-evaluation/resilience4j/resilience4j-circuitbreaker/src/test/java/io/github/resilience4j/circuitbreaker/internal/InMemoryCircuitBreakerRegistryTest.java","3","127","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.circularbuffer.concurrent","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jcstress/java/io/github/resilience4j/circularbuffer/concurrent/ConcurrentEvictingQueueDoubleReadTest.java","4","22","Unused import 'org.openjdk.jcstress.annotations.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.circularbuffer.concurrent","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jcstress/java/io/github/resilience4j/circularbuffer/concurrent/ConcurrentEvictingQueueDoubleWriteTest.java","4","22","Unused import 'org.openjdk.jcstress.annotations.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.circularbuffer.concurrent","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jcstress/java/io/github/resilience4j/circularbuffer/concurrent/ConcurrentEvictingQueueReadWriteTest.java","4","22","Unused import 'org.openjdk.jcstress.annotations.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/CircularBufferBenchmark.java","4","22","Unused import 'org.openjdk.jmh.annotations.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/CircularBufferBenchmark.java","3","63","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/CircularBufferBenchmark.java","3","73","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/CircularBufferBenchmark.java","3","84","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/CircularBufferBenchmark.java","3","95","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueueBenchmark.java","4","22","Unused import 'org.openjdk.jmh.annotations.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueueBenchmark.java","3","61","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueueBenchmark.java","3","71","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueueBenchmark.java","3","82","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/jmh/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueueBenchmark.java","3","93","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/main/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueue.java","2","61","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"2","io.github.resilience4j.circularbuffer","/workspaces/design-evaluation/resilience4j/resilience4j-circularbuffer/src/main/java/io/github/resilience4j/circularbuffer/ConcurrentEvictingQueue.java","3","207","Consider simply returning the value vs storing it in local variable 'destination'","Code Style","UnnecessaryLocalBeforeReturn"
"1","io.github.resilience4j.commons.configuration.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/bulkhead/configure/CommonsConfigurationBulkHeadConfiguration.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/bulkhead/configure/CommonsConfigurationBulkheadRegistry.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","91","This statement should have braces","Code Style","ControlStatementBraces"
"3","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","93","This statement should have braces","Code Style","ControlStatementBraces"
"4","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","95","This statement should have braces","Code Style","ControlStatementBraces"
"5","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","97","This statement should have braces","Code Style","ControlStatementBraces"
"6","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","99","This statement should have braces","Code Style","ControlStatementBraces"
"7","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","101","This statement should have braces","Code Style","ControlStatementBraces"
"8","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","103","This statement should have braces","Code Style","ControlStatementBraces"
"9","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","105","This statement should have braces","Code Style","ControlStatementBraces"
"10","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","107","This statement should have braces","Code Style","ControlStatementBraces"
"11","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","109","This statement should have braces","Code Style","ControlStatementBraces"
"12","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","111","This statement should have braces","Code Style","ControlStatementBraces"
"13","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","113","This statement should have braces","Code Style","ControlStatementBraces"
"14","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","115","This statement should have braces","Code Style","ControlStatementBraces"
"15","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","117","This statement should have braces","Code Style","ControlStatementBraces"
"16","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","119","This statement should have braces","Code Style","ControlStatementBraces"
"17","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","121","This statement should have braces","Code Style","ControlStatementBraces"
"18","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","124","This statement should have braces","Code Style","ControlStatementBraces"
"19","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","127","This statement should have braces","Code Style","ControlStatementBraces"
"20","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","130","This statement should have braces","Code Style","ControlStatementBraces"
"21","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","133","This statement should have braces","Code Style","ControlStatementBraces"
"22","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","136","This statement should have braces","Code Style","ControlStatementBraces"
"23","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","138","This statement should have braces","Code Style","ControlStatementBraces"
"24","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","140","This statement should have braces","Code Style","ControlStatementBraces"
"25","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","142","This statement should have braces","Code Style","ControlStatementBraces"
"26","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerConfiguration.java","3","144","This statement should have braces","Code Style","ControlStatementBraces"
"1","io.github.resilience4j.commons.configuration.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/circuitbreaker/configure/CommonsConfigurationCircuitBreakerRegistry.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/ratelimiter/configure/CommonsConfigurationRateLimiterConfiguration.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/ratelimiter/configure/CommonsConfigurationRateLimiterRegistry.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/retry/configure/CommonsConfigurationRetryConfiguration.java","1","34","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/retry/configure/CommonsConfigurationRetryRegistry.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/timelimiter/configure/CommonsConfigurationTimeLimiterConfiguration.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/timelimiter/configure/CommonsConfigurationTimeLimiterRegistry.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.commons.configuration.util","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/util/ClassParseUtil.java","3","25","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.commons.configuration.util","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/main/java/io/github/resilience4j/commons/configuration/util/StringParseUtil.java","3","25","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.commons.configuration.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/test/java/io/github/resilience4j/commons/configuration/retry/configure/CommonsConfigurationRetryConfigurationTest.java","3","87","Unnecessary semicolon","Code Style","UnnecessarySemicolon"
"1","io.github.resilience4j.commons.configuration.util","/workspaces/design-evaluation/resilience4j/resilience4j-commons-configuration/src/test/java/io/github/resilience4j/commons/configuration/util/CommonsConfigurationUtil.java","3","26","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CallableUtils.java","1","28","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CheckedFunctionUtils.java","4","26","Unused import 'java.util.function.BiFunction'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CheckedFunctionUtils.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CheckedFunctionUtils.java","3","49","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CheckedFunctionUtils.java","3","70","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"5","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CheckedFunctionUtils.java","3","138","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/CompletionStageUtils.java","1","28","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/ContextAwareScheduledThreadPoolExecutor.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/ContextPropagator.java","3","36","Unnecessary modifiers 'public static final' on field 'CONTEXT_PROPAGATOR_LIST_SHOULD_BE_NON_NULL': the field is declared in an interface type","Code Style","UnnecessaryModifier"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/EventProcessor.java","4","23","Unused import 'java.util.List'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/IntervalFunction.java","3","37","Lambda expression could be written as a method reference: `backoffFunction::apply`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/NamingThreadFactory.java","3","35","Avoid using java.lang.ThreadGroup; it is not thread safe","Multithreading","AvoidThreadGroup"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/NamingThreadFactory.java","3","41","Avoid using java.lang.ThreadGroup; it is not thread safe","Multithreading","AvoidThreadGroup"
"3","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/NamingThreadFactory.java","3","42","Avoid using java.lang.ThreadGroup; it is not thread safe","Multithreading","AvoidThreadGroup"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/ResultUtils.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/ResultUtils.java","3","42","This if statement can be replaced by `return !{condition} || {elseBranch};`","Design","SimplifyBooleanReturns"
"3","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/ResultUtils.java","3","63","This if statement can be replaced by `return !{condition} || {elseBranch};`","Design","SimplifyBooleanReturns"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/StringUtils.java","1","23","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/SupplierUtils.java","1","24","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/CheckedConsumer.java","3","40","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/CheckedFunction.java","3","35","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/CheckedRunnable.java","3","33","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/CheckedSupplier.java","3","40","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/Either.java","4","120","Unnecessary qualifier 'Either': 'left' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"2","io.github.resilience4j.core.functions","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/functions/Either.java","4","137","Unnecessary qualifier 'Either': 'right' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.core.predicate","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/predicate/PredicateCreator.java","1","7","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.core.predicate","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/predicate/PredicateCreator.java","4","16","Unnecessary qualifier 'PredicateCreator': 'createExceptionsPredicate' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.core.registry","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/registry/AbstractRegistry.java","3","130","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.core.registry","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/registry/AbstractRegistry.java","3","144","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"3","io.github.resilience4j.core.registry","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/registry/AbstractRegistry.java","3","174","Avoid using implementation types like 'HashMap'; use the interface instead","Best Practices","LooseCoupling"
"4","io.github.resilience4j.core.registry","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/main/java/io/github/resilience4j/core/registry/AbstractRegistry.java","1","179","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/CallableUtilsTest.java","1","15","The local variable name 'Callable' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/CallableUtilsTest.java","3","81","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/CheckedFunctionUtilsTest.java","3","63","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/CheckedFunctionUtilsTest.java","3","95","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","1","64","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","77","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","84","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"4","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","84","Avoid unused constructor parameters such as 'foo'.","Best Practices","UnusedFormalParameter"
"5","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","89","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"6","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","89","Avoid unused constructor parameters such as 'a'.","Best Practices","UnusedFormalParameter"
"7","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","93","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"8","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","93","Avoid unused constructor parameters such as 'a'.","Best Practices","UnusedFormalParameter"
"9","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ClassUtilsTest.java","3","94","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/CompletionStageUtilsTest.java","3","105","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ContextAwareScheduledThreadPoolExecutorTest.java","3","74","Lambda expression could be written as a method reference: `schedule::get`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/ContextAwareScheduledThreadPoolExecutorTest.java","3","84","Lambda expression could be written as a method reference: `schedule::get`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/EventProcessorTest.java","2","158","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/StopWatchTest.java","2","44","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/SupplierUtilsTest.java","3","66","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/TestContextPropagators.java","1","86","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.core.predicate","/workspaces/design-evaluation/resilience4j/resilience4j-core/src/test/java/io/github/resilience4j/core/predicate/PredicateCreatorTest.java","1","88","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/main/java/io/github/resilience4j/feign/FallbackFactory.java","3","57","Thrown exception does not preserve the stack trace of exception 'exception' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/main/java/io/github/resilience4j/feign/FallbackHandler.java","3","57","You should not modify visibility of constructors, methods or fields using setAccessible()","Error Prone","AvoidAccessibilityAlteration"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/main/java/io/github/resilience4j/feign/FeignDecorators.java","1","58","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/main/java/io/github/resilience4j/feign/Resilience4jFeign.java","3","42","This utility class has a non-private constructor","Design","UseUtilityClass"
"2","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/main/java/io/github/resilience4j/feign/Resilience4jFeign.java","4","50","Unnecessary qualifier 'Resilience4jFeign': 'capability' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignCircuitBreakerTest.java","3","120","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignCircuitBreakerTest.java","3","148","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","67","The JUnit 4 test method name 'should_successfully_get_a_response' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"2","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","78","The JUnit 4 test method name 'should_lazily_fail_on_invalid_fallback' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"3","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","89","The JUnit 4 test method name 'should_go_to_fallback_and_consume_exception' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"4","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","101","The JUnit 4 test method name 'should_go_to_fallback_and_rethrow_an_exception_thrown_in_fallback' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"5","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","114","The JUnit 4 test method name 'should_go_to_fallback_and_consume_exception_with_exception_filter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"6","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","134","The JUnit 4 test method name 'should_go_to_second_fallback_and_consume_exception_with_exception_filter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"7","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","154","The JUnit 4 test method name 'should_go_to_fallback_and_consume_exception_with_predicate' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"8","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","175","The JUnit 4 test method name 'should_go_to_second_fallback_and_consume_exception_with_predicate' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"9","io.github.resilience4j.feign","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/Resilience4jFeignFallbackFactoryTest.java","1","194","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.feign.test","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/test/Issue560.java","3","12","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.feign.test","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/test/TestFeignDecorator.java","2","12","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"2","io.github.resilience4j.feign.test","/workspaces/design-evaluation/resilience4j/resilience4j-feign/src/test/java/io/github/resilience4j/feign/test/TestFeignDecorator.java","2","13","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"1","io.github.resilience4j.common.bulkhead.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/configuration/CommonBulkheadConfigurationProperties.java","3","50","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.bulkhead.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/configuration/CommonThreadPoolBulkheadConfigurationProperties.java","3","87","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/monitoring/endpoint/BulkheadEndpointResponse.java","3","24","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/monitoring/endpoint/BulkheadEventDTO.java","3","26","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/monitoring/endpoint/BulkheadEventDTOFactory.java","1","20","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.common.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/bulkhead/monitoring/endpoint/BulkheadEventsEndpointResponse.java","3","24","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEndpointResponse.java","3","12","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTO.java","3","37","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java","4","18","Unused import 'io.github.resilience4j.circuitbreaker.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactory.java","1","20","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerEventsEndpointResponse.java","3","12","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerUpdateStateResponse.java","3","54","This statement should have braces","Code Style","ControlStatementBraces"
"2","io.github.resilience4j.common.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/circuitbreaker/monitoring/endpoint/CircuitBreakerUpdateStateResponse.java","3","55","This statement should have braces","Code Style","ControlStatementBraces"
"1","io.github.resilience4j.common.micrometer.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/micrometer/configuration/CommonTimerConfigurationProperties.java","3","95","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.micrometer.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/micrometer/monitoring/endpoint/TimerEndpointResponse.java","3","28","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.micrometer.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/micrometer/monitoring/endpoint/TimerEventDTOFactory.java","1","26","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.common.micrometer.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/micrometer/monitoring/endpoint/TimerEventsEndpointResponse.java","3","28","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.ratelimiter.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/configuration/CommonRateLimiterConfigurationProperties.java","4","19","Unused import 'java.util.Collections'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.common.ratelimiter.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/configuration/CommonRateLimiterConfigurationProperties.java","3","64","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.ratelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/monitoring/endpoint/RateLimiterEndpointResponse.java","3","29","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.ratelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/ratelimiter/monitoring/endpoint/RateLimiterEventsEndpointResponse.java","3","27","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationProperties.java","4","21","Unused import 'io.github.resilience4j.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationProperties.java","3","103","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/monitoring/endpoint/RetryEndpointResponse.java","3","12","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/monitoring/endpoint/RetryEventDTO.java","3","31","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/monitoring/endpoint/RetryEventDTOFactory.java","4","18","Unused import 'io.github.resilience4j.retry.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.common.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/monitoring/endpoint/RetryEventDTOFactory.java","1","23","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.common.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/retry/monitoring/endpoint/RetryEventsEndpointResponse.java","3","30","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.timelimiter.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/timelimiter/configuration/CommonTimeLimiterConfigurationProperties.java","3","76","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.common.timelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/timelimiter/monitoring/endpoint/TimeLimiterEndpointResponse.java","3","28","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.timelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/timelimiter/monitoring/endpoint/TimeLimiterEventsEndpointResponse.java","3","28","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.common.utils","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/main/java/io/github/resilience4j/common/utils/ConfigUtils.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerEventDTOFactoryTest.java","4","3","Unused import 'io.github.resilience4j.circuitbreaker.event.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.common.circuitbreaker.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/circuitbreaker/configuration/CircuitBreakerConfigurationPropertiesTest.java","3","95","Avoid unused local variables such as 'backend1'.","Best Practices","UnusedLocalVariable"
"1","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","23","The JUnit 4 test method name 'createRetryConfig_withDefault' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"2","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","28","The JUnit 4 test method name 'createRetryConfig_withWaitDuration' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"3","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","33","The JUnit 4 test method name 'createRetryConfig_withExponentialBackoff' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"4","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","38","The JUnit 4 test method name 'createRetryConfig_withBackoffMultiplier' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"5","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","43","The JUnit 4 test method name 'createRetryConfig_withExponentialMaxWaitDuration' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"6","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","48","The JUnit 4 test method name 'createRetryConfig_withRandomizedWait' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"7","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","53","The JUnit 4 test method name 'createRetryConfig_withRandomizedFactor' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"8","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","58","The JUnit 4 test method name 'createRetryConfig_withRandomizedExponentialBackoff' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"9","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","63","The JUnit 4 test method name 'createRetryConfig_withRandomizedExponentialBackoffMultiplier' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"10","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","68","The JUnit 4 test method name 'createRetryConfig_withRandomizedFactorExponentialBackoffMultiplier' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"11","io.github.resilience4j.common.retry.configuration","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationPropertiesTest.java","1","73","The JUnit 4 test method name 'createRetryConfig_withRandomizedExponentialMaxWaitDuration' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.common.utils","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/common/utils/ConsumeResultBeforeRetryAttempt.java","3","7","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-framework-common/src/test/java/io/github/resilience4j/retry/monitoring/endpoint/RetryEventDTOFactoryTest.java","4","5","Unused import 'io.github.resilience4j.retry.event.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/Hedge.java","4","22","Unused import 'io.github.resilience4j.hedge.event.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/HedgeConfig.java","1","37","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/HedgeConfig.java","3","143","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"3","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/HedgeConfig.java","4","232","Unnecessary qualifier 'Arrays': 'stream' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/internal/HedgeEventProcessor.java","4","25","Unused import 'io.github.resilience4j.hedge.event.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/internal/HedgeImpl.java","4","24","Unused import 'io.github.resilience4j.hedge.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/internal/HedgeImpl.java","2","243","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/main/java/io/github/resilience4j/hedge/internal/HedgeResult.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeConfigTest.java","4","75","Useless parentheses.","Code Style","UselessParentheses"
"1","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","77","The local variable name 'Hedge' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"2","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","90","The local variable name 'Hedge' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"3","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","99","The local variable name 'Hedge' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"4","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","109","The local variable name 'Hedge' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"5","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","112","The local variable name 'Hedge2' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"6","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","1","256","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"7","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","3","259","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"8","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","3","263","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"9","io.github.resilience4j.hedge","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/HedgeRegistryTest.java","3","267","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","3","85","Avoid unused local variables such as 'hedged'.","Best Practices","UnusedLocalVariable"
"2","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","104","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"3","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","128","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"4","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","148","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"5","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","171","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"6","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","191","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"7","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","210","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"8","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","233","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"9","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","257","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"10","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","281","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"11","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","2","301","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"12","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","3","317","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"13","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplCompletionStageBehaviorsTest.java","3","346","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","67","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"2","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","78","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"3","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","93","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"4","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","104","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"5","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","118","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"6","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","129","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"7","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","139","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"8","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","153","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"9","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","168","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"10","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","183","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"11","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","2","194","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"12","io.github.resilience4j.hedge.internal","/workspaces/design-evaluation/resilience4j/resilience4j-hedge/src/test/java/io/github/resilience4j/hedge/internal/HedgeImplFutureBehaviorsTest.java","3","210","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/BulkheadMetrics.java","1","35","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/CircuitBreakerMetrics.java","1","38","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/RateLimiterMetrics.java","1","38","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/RetryMetrics.java","1","20","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/ThreadPoolBulkheadMetrics.java","1","37","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/TimeLimiterMetrics.java","1","38","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","53","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"2","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","73","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"3","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","94","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","115","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"5","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","135","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"6","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","156","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"7","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","178","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"8","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/Timer.java","3","206","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.metrics.internal","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/main/java/io/github/resilience4j/metrics/internal/TimerImpl.java","3","74","Avoid unnecessary constructors - the compiler will generate these for you","Code Style","UnnecessaryConstructor"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/test/java/io/github/resilience4j/metrics/AbstractTimeLimiterMetricsTest.java","2","38","Use of modifier volatile is not recommended.","Multithreading","AvoidUsingVolatile"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-metrics/src/test/java/io/github/resilience4j/metrics/RetryMetricsTest.java","3","221","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/Observations.java","3","158","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/TimerConfig.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/TimerConfig.java","1","98","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.internal","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/internal/TimerEventProcessor.java","4","26","Unused static import 'io.github.resilience4j.micrometer.Timer.EventPublisher'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.micrometer.internal","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/internal/TimerImpl.java","2","159","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/AbstractCircuitBreakerMetrics.java","4","20","Unused import 'io.micrometer.core.instrument.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/BulkheadMetricNames.java","3","18","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/CircuitBreakerMetricNames.java","3","28","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/RetryMetricNames.java","3","30","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedBulkheadMetrics.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedCircuitBreakerMetrics.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedRateLimiterMetrics.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedRetryMetrics.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedThreadPoolBulkheadMetrics.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/TaggedTimeLimiterMetrics.java","1","28","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/main/java/io/github/resilience4j/micrometer/tagged/ThreadPoolBulkheadMetricNames.java","3","30","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerAssertions.java","3","30","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerEventPublisherTest.java","4","26","Unused import 'java.time.ZonedDateTime'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerEventPublisherTest.java","4","30","Unused static import 'java.time.ZonedDateTime.now'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerRegistryTest.java","1","126","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerRegistryTest.java","3","129","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerRegistryTest.java","3","133","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/TimerRegistryTest.java","3","137","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/tagged/MetricsTestHelper.java","3","23","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.micrometer.tagged","/workspaces/design-evaluation/resilience4j/resilience4j-micrometer/src/test/java/io/github/resilience4j/micrometer/tagged/TaggedRateLimiterMetricsTest.java","3","76","Avoid unused local variables such as 'newRateLimiter'.","Best Practices","UnusedLocalVariable"
"1","io.github.resilience4j.micronaut","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/BaseInterceptor.java","2","46","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/Bulkhead.java","3","27","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/Bulkhead.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/CircuitBreaker.java","3","29","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/CircuitBreaker.java","3","30","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/RateLimiter.java","3","29","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/RateLimiter.java","3","30","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/Retry.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/Retry.java","3","29","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/TimeLimiter.java","3","24","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"2","io.github.resilience4j.micronaut.annotation","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/annotation/TimeLimiter.java","3","25","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.micronaut.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/bulkhead/BulkheadInterceptor.java","4","19","Unused import 'io.github.resilience4j.bulkhead.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.micronaut.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/bulkhead/BulkheadInterceptor.java","3","129","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"3","io.github.resilience4j.micronaut.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/bulkhead/BulkheadInterceptor.java","3","152","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"4","io.github.resilience4j.micronaut.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/bulkhead/BulkheadInterceptor.java","3","155","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.micronaut.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/bulkhead/ThreadPoolBulkheadProperties.java","4","19","Unused import 'io.micronaut.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.micronaut.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/circuitbreaker/CircuitBreakerInterceptor.java","3","104","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.micronaut.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/ratelimiter/RateLimiterInterceptor.java","3","104","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.micronaut.retry","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/retry/RetryInterceptor.java","3","116","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.micronaut.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/timelimiter/TimeLimiterInterceptor.java","4","34","Unused import 'jakarta.inject.Singleton'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.micronaut.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-micronaut/src/main/java/io/github/resilience4j/micronaut/timelimiter/TimeLimiterInterceptor.java","3","115","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","4","23","Unused import 'org.openjdk.jmh.annotations.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","45","Perhaps 'semaphoreBasedRateLimiter' could be replaced by a local variable.","Design","SingularField"
"3","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","46","Perhaps 'atomicRateLimiter' could be replaced by a local variable.","Design","SingularField"
"4","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","79","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","81","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","88","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"7","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/jmh/java/io/github/resilience4j/ratelimiter/RateLimiterBenchmark.java","3","90","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/RateLimiterConfig.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/RateLimiterConfig.java","3","158","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/RateLimiterRegistry.java","3","298","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/RequestNotPermitted.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiter.java","3","238","Consider simply returning the value vs storing it in local variable 'nextState'","Code Style","UnnecessaryLocalBeforeReturn"
"2","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiter.java","1","431","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiter.java","1","452","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/main/java/io/github/resilience4j/ratelimiter/internal/SemaphoreBasedRateLimiter.java","3","283","Avoid unnecessary constructors - the compiler will generate these for you","Code Style","UnnecessaryConstructor"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterRegistryTest.java","4","6","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterRegistryTest.java","1","198","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterRegistryTest.java","3","202","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterRegistryTest.java","3","206","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"5","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterRegistryTest.java","3","210","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterWithConditionalDrainIntegrationTest.java","1","76","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiterTest.java","3","452","Avoid using implementation types like 'ArrayList'; use the interface instead","Best Practices","LooseCoupling"
"2","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiterTest.java","3","517","Avoid unused local variables such as 'firstPermission'.","Best Practices","UnusedLocalVariable"
"3","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/AtomicRateLimiterTest.java","3","520","Avoid unused local variables such as 'secondPermission'.","Best Practices","UnusedLocalVariable"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/InMemoryRateLimiterRegistryTest.java","4","21","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/InMemoryRateLimiterRegistryTest.java","3","173","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/InMemoryRateLimiterRegistryTest.java","3","176","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/InMemoryRateLimiterRegistryTest.java","3","179","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/RateLimitersImplementationTest.java","3","110","Lambda expression could be written as a method reference: `eventAfterDrainCatcher::set`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.ratelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-ratelimiter/src/test/java/io/github/resilience4j/ratelimiter/internal/SemaphoreBasedRateLimiterImplTest.java","3","125","Avoid using implementation types like 'SynchronousQueue'; use the interface instead","Best Practices","LooseCoupling"
"1","io.github.resilience4j.reactor","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/ReactorOperatorFallbackDecorator.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.adapter","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/adapter/ReactorAdapter.java","1","23","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/bulkhead/operator/BulkheadOperator.java","1","34","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/bulkhead/operator/FluxBulkhead.java","2","39","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.reactor.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/bulkhead/operator/MonoBulkhead.java","2","39","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.reactor.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator.java","4","18","Unused import 'io.github.resilience4j.circuitbreaker.CallNotPermittedException'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.reactor.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/circuitbreaker/operator/CircuitBreakerOperator.java","1","34","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/circuitbreaker/operator/FluxCircuitBreaker.java","2","40","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.reactor.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/circuitbreaker/operator/MonoCircuitBreaker.java","2","40","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.reactor.micrometer.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/micrometer/operator/TimerOperator.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/ratelimiter/operator/CorePublisherRateLimiterOperator.java","2","49","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.reactor.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/ratelimiter/operator/RateLimiterOperator.java","1","35","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.retry","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/retry/RetryOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/main/java/io/github/resilience4j/reactor/timelimiter/TimeLimiterOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.reactor.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-reactor/src/test/java/io/github/resilience4j/reactor/ratelimiter/operator/MonoRateLimiterTest.java","4","31","Unused static import 'io.github.resilience4j.reactor.ratelimiter.operator.OverloadException.SpecificOverloadException'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/IntervalFunction.java","4","15","Useless parentheses.","Code Style","UselessParentheses"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/MaxRetriesExceededException.java","1","7","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/Retry.java","4","25","Unused import 'io.github.resilience4j.retry.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/Retry.java","3","645","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/RetryConfig.java","1","35","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/RetryConfig.java","3","217","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/RetryRegistry.java","4","266","Unnecessary qualifier 'java.util': 'HashMap' is already in scope because it is imported in this file","Code Style","UnnecessaryFullyQualifiedName"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/RetryRegistry.java","3","295","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","4","31","Unused import 'io.github.resilience4j.retry.event.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","3","270","Thrown exception does not preserve the stack trace of exception 'ex' on all code paths","Best Practices","PreserveStackTrace"
"3","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","3","271","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","3","272","Thrown exception does not preserve the stack trace of exception 'ex' on all code paths","Best Practices","PreserveStackTrace"
"5","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","3","288","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"6","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","3","289","Thrown exception does not preserve the stack trace of exception 'ex' on all code paths","Best Practices","PreserveStackTrace"
"7","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/main/java/io/github/resilience4j/retry/internal/RetryImpl.java","1","424","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","3","277","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","1","285","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","1","289","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"4","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","1","293","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"5","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","1","297","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"6","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryConfigBuilderTest.java","3","297","Exceptions should not extend java.lang.Error","Design","DoNotExtendJavaLangError"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryRegistryTest.java","4","21","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryRegistryTest.java","1","256","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryRegistryTest.java","3","259","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryRegistryTest.java","3","263","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"5","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/RetryRegistryTest.java","3","267","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/CallableTest.java","4","15","Unused import 'java.util.function.Supplier'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/CompletionStageRetryTest.java","4","147","Unnecessary qualifier 'CompletableFuture': 'completedFuture' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"2","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/CompletionStageRetryTest.java","3","149","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"3","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/CompletionStageRetryTest.java","1","312","The lambda parameter name '__' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","FormalParameterNamingConventions"
"1","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/InMemoryRetryRegistryTest.java","4","21","Unused import 'io.github.resilience4j.core.registry.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/InMemoryRetryRegistryTest.java","3","57","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/InMemoryRetryRegistryTest.java","3","60","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/InMemoryRetryRegistryTest.java","3","63","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/SupplierRetryTest.java","3","361","Avoid unused local variables such as 'result'.","Best Practices","UnusedLocalVariable"
"2","io.github.resilience4j.retry.internal","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/internal/SupplierRetryTest.java","3","466","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.retry.utils","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/utils/AsyncUtils.java","3","28","This utility class has a non-private constructor","Design","UseUtilityClass"
"2","io.github.resilience4j.retry.utils","/workspaces/design-evaluation/resilience4j/resilience4j-retry/src/test/java/io/github/resilience4j/retry/utils/AsyncUtils.java","3","39","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.adapter","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/adapter/RxJava2Adapter.java","3","11","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/bulkhead/operator/BulkheadOperator.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/bulkhead/operator/BulkheadOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/bulkhead/operator/FlowableBulkhead.java","4","37","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator.java","4","18","Unused import 'io.github.resilience4j.circuitbreaker.CallNotPermittedException'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/circuitbreaker/operator/CircuitBreakerOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/circuitbreaker/operator/FlowableCircuitBreaker.java","4","37","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.micrometer.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/micrometer/transformer/TimerTransformer.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.micrometer.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/micrometer/transformer/TimerTransformer.java","1","24","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/ratelimiter/operator/FlowableRateLimiter.java","4","39","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/ratelimiter/operator/RateLimiterOperator.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/ratelimiter/operator/RateLimiterOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/retry/transformer/RetryTransformer.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/retry/transformer/RetryTransformer.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.timelimiter.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/timelimiter/transformer/TimeLimiterTransformer.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/main/java/io/github/resilience4j/timelimiter/transformer/TimeLimiterTransformer.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava2/src/test/java/io/github/resilience4j/retry/transformer/RetryTransformerTest.java","4","24","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.rxjava3.adapter","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/adapter/RxJava3Adapter.java","3","11","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.rxjava3.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/bulkhead/operator/BulkheadOperator.java","4","20","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/bulkhead/operator/BulkheadOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.bulkhead.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/bulkhead/operator/FlowableBulkhead.java","4","37","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.rxjava3.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/circuitbreaker/operator/CircuitBreakerOperator.java","4","18","Unused import 'io.github.resilience4j.circuitbreaker.CallNotPermittedException'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/circuitbreaker/operator/CircuitBreakerOperator.java","4","20","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.rxjava3.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/circuitbreaker/operator/CircuitBreakerOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.circuitbreaker.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/circuitbreaker/operator/FlowableCircuitBreaker.java","4","37","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.rxjava3.micrometer.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/micrometer/transformer/TimerTransformer.java","4","19","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.micrometer.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/micrometer/transformer/TimerTransformer.java","1","24","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/ratelimiter/operator/FlowableRateLimiter.java","4","39","Unnecessary qualifier 'Objects': 'requireNonNull' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.rxjava3.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/ratelimiter/operator/RateLimiterOperator.java","4","20","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.ratelimiter.operator","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/ratelimiter/operator/RateLimiterOperator.java","1","32","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/retry/transformer/RetryTransformer.java","4","20","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/retry/transformer/RetryTransformer.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.timelimiter.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/timelimiter/transformer/TimeLimiterTransformer.java","4","20","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.rxjava3.timelimiter.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/main/java/io/github/resilience4j/rxjava3/timelimiter/transformer/TimeLimiterTransformer.java","1","25","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.rxjava3.retry.transformer","/workspaces/design-evaluation/resilience4j/resilience4j-rxjava3/src/test/java/io/github/resilience4j/rxjava3/retry/transformer/RetryTransformerTest.java","4","24","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","4","22","Unused import 'io.github.resilience4j.bulkhead.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","4","42","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","91","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","106","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","113","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","120","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/bulkhead/monitoring/endpoint/BulkheadEventsEndpoint.java","3","68","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","4","20","Unused import 'io.github.resilience4j.circuitbreaker.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","4","37","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","85","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","98","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","105","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","112","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerEventsEndpoint.java","3","66","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixServerSideEvent.java","3","91","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"2","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixServerSideEvent.java","3","107","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerServerSideEvent.java","3","82","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"2","io.github.resilience4j.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/endpoint/CircuitBreakerServerSideEvent.java","3","107","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/circuitbreaker/monitoring/health/CircuitBreakersHealthIndicator.java","3","100","Avoid unused private methods such as 'isRegisterHealthIndicator(CircuitBreaker)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","4","18","Unused import 'io.github.resilience4j.fallback.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","50","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","57","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","63","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","70","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","77","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","4","26","Unused import 'io.github.resilience4j.ratelimiter.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","4","37","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","81","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","96","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","103","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","110","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/monitoring/endpoint/RateLimiterEventsEndpoint.java","3","63","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.ratelimiter.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/monitoring/health/RateLimitersHealthIndicator.java","4","22","Unused import 'org.springframework.boot.actuate.health.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/ratelimiter/monitoring/health/RateLimitersHealthIndicator.java","3","61","Avoid unused private methods such as 'isRegisterHealthIndicator(RateLimiter)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","4","27","Unused import 'io.github.resilience4j.retry.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","4","38","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","94","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","110","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","117","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","124","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/retry/monitoring/endpoint/RetryEventsEndpoint.java","3","79","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.scheduled.threadpool.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/scheduled/threadpool/autoconfigure/ContextAwareScheduledThreadPoolAutoConfiguration.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.timelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/timelimiter/autoconfigure/AbstractTimeLimiterConfigurationOnMissingBean.java","4","30","Unused import 'io.github.resilience4j.timelimiter.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/timelimiter/autoconfigure/AbstractTimeLimiterConfigurationOnMissingBean.java","4","39","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.timelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/main/java/io/github/resilience4j/timelimiter/monitoring/endpoint/TimeLimiterEventsEndpoint.java","3","60","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/LegacyMetricsAutoConfigurationTest.java","4","20","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/MeterRegistryWithoutMetricsAutoConfigurationTest.java","4","18","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/MetricsAutoConfigurationTest.java","4","18","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/TestThreadLocalContextPropagator.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/TestUtils.java","3","11","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerActuatorTest.java","4","29","Unused import 'org.springframework.http.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationAsyncTest.java","3","72","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationReactorTest.java","3","76","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","78","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","95","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"3","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","105","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"4","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","114","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"5","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","124","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationTest.java","3","80","Unnecessary semicolon","Code Style","UnnecessarySemicolon"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerAutoConfigurationTest.java","3","90","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerFeignTest.java","3","60","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/CircuitBreakerFeignTest.java","3","65","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/RecordResultPredicate.java","4","3","Unused import 'org.apache.http.HttpStatus'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","115","Lambda expression could be written as a method reference: `events::add`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","130","Consider simply returning the value vs storing it in local variable 'eventStream'","Code Style","UnnecessaryLocalBeforeReturn"
"3","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","135","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"4","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","152","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","115","Lambda expression could be written as a method reference: `events::add`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","130","Consider simply returning the value vs storing it in local variable 'eventStream'","Code Style","UnnecessaryLocalBeforeReturn"
"3","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","135","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"4","io.github.resilience4j.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","152","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterAutoConfigurationTest.java","3","98","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterAutoConfigurationTest.java","3","125","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"3","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterAutoConfigurationTest.java","3","163","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"4","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/ratelimiter/RateLimiterAutoConfigurationTest.java","3","190","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/retry/RetryAutoConfigurationAsyncTest.java","3","245","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/retry/RetryAutoConfigurationReactorTest.java","3","74","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/retry/RetryAutoConfigurationRxJavaTest.java","4","33","Unused import 'java.util.function.Function'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/retry/RetryAutoConfigurationTest.java","3","90","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/retry/RetryAutoConfigurationTest.java","3","146","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/BeanContextPropagator.java","3","13","Lambda expression could be written as a method reference: `Optional::empty`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/DummyServiceImpl.java","3","48","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/ReactiveDummyService.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/ReactiveDummyServiceImpl.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/TestApplication.java","3","36","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"1","io.github.resilience4j.service.test.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/service/test/bulkhead/BulkheadDummyServiceImpl.java","3","16","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot2/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterAutoConfigurationTest.java","3","71","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","4","29","Unused import 'io.github.resilience4j.spring6.bulkhead.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","4","42","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","91","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","106","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","113","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.springboot3.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.java","3","120","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/bulkhead/monitoring/endpoint/BulkheadEventsEndpoint.java","3","68","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","4","25","Unused import 'io.github.resilience4j.spring6.circuitbreaker.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","4","37","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","85","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","98","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","105","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.springboot3.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.java","3","112","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/endpoint/CircuitBreakerEventsEndpoint.java","3","66","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixServerSideEvent.java","3","91","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"2","io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/endpoint/CircuitBreakerHystrixServerSideEvent.java","3","107","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/endpoint/CircuitBreakerServerSideEvent.java","3","82","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"2","io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/endpoint/CircuitBreakerServerSideEvent.java","3","107","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/health/CircuitBreakersHealthIndicator.java","3","100","Avoid unused private methods such as 'isRegisterHealthIndicator(CircuitBreaker)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","4","18","Unused import 'io.github.resilience4j.spring6.fallback.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","50","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","57","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","63","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","70","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.springboot3.fallback.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.java","3","77","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.micrometer.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/micrometer/autoconfigure/AbstractTimerConfigurationOnMissingBean.java","4","27","Unused import 'io.github.resilience4j.spring6.micrometer.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.micrometer.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/micrometer/autoconfigure/AbstractTimerConfigurationOnMissingBean.java","4","39","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.micrometer.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/micrometer/monitoring/endpoint/TimerEventsEndpoint.java","3","76","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","4","28","Unused import 'io.github.resilience4j.spring6.ratelimiter.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","4","37","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","81","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","96","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","103","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.springboot3.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.java","3","110","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/monitoring/endpoint/RateLimiterEventsEndpoint.java","3","63","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3.ratelimiter.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/monitoring/health/RateLimitersHealthIndicator.java","4","22","Unused import 'org.springframework.boot.actuate.health.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.ratelimiter.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/ratelimiter/monitoring/health/RateLimitersHealthIndicator.java","3","61","Avoid unused private methods such as 'isRegisterHealthIndicator(RateLimiter)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","4","29","Unused import 'io.github.resilience4j.spring6.retry.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","4","38","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","94","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","110","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","117","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.springboot3.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.java","3","124","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.retry.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/retry/monitoring/endpoint/RetryEventsEndpoint.java","3","79","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3.scheduled.threadpool.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/scheduled/threadpool/autoconfigure/ContextAwareScheduledThreadPoolAutoConfiguration.java","3","28","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.springboot3.timelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/timelimiter/autoconfigure/AbstractTimeLimiterConfigurationOnMissingBean.java","4","29","Unused import 'io.github.resilience4j.spring6.timelimiter.configure.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.timelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/timelimiter/autoconfigure/AbstractTimeLimiterConfigurationOnMissingBean.java","4","39","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/main/java/io/github/resilience4j/springboot3/timelimiter/monitoring/endpoint/TimeLimiterEventsEndpoint.java","3","60","When doing a String.toLowerCase()/toUpperCase() call, use a Locale","Error Prone","UseLocaleWithCaseConversions"
"1","io.github.resilience4j.springboot3","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/LegacyMetricsAutoConfigurationTest.java","4","20","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/MeterRegistryWithoutMetricsAutoConfigurationTest.java","4","18","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/MetricsAutoConfigurationTest.java","4","18","Unused import 'io.github.resilience4j.micrometer.tagged.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/TestThreadLocalContextPropagator.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.springboot3","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/TestUtils.java","3","11","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerActuatorTest.java","4","32","Unused import 'org.springframework.http.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationAsyncTest.java","3","73","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationReactorTest.java","3","77","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","79","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","96","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"3","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","106","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"4","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","115","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"5","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationRxJava2Test.java","3","125","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationTest.java","3","82","Unnecessary semicolon","Code Style","UnnecessarySemicolon"
"2","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerAutoConfigurationTest.java","3","92","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerFeignTest.java","3","62","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/CircuitBreakerFeignTest.java","3","67","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/RecordResultPredicate.java","4","3","Unused import 'org.apache.http.HttpStatus'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","115","Lambda expression could be written as a method reference: `events::add`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","130","Consider simply returning the value vs storing it in local variable 'eventStream'","Code Style","UnnecessaryLocalBeforeReturn"
"3","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","135","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"4","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerHystrixStreamEventsTest.java","3","152","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","115","Lambda expression could be written as a method reference: `events::add`","Code Style","LambdaCanBeMethodReference"
"2","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","130","Consider simply returning the value vs storing it in local variable 'eventStream'","Code Style","UnnecessaryLocalBeforeReturn"
"3","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","135","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"4","io.github.resilience4j.springboot3.circuitbreaker.monitoring.events","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/events/CircuitBreakerStreamEventsTest.java","3","152","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.circuitbreaker.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/circuitbreaker/monitoring/health/CircuitBreakersHealthIndicatorTest.java","4","7","Unnecessary import from the current package 'io.github.resilience4j.springboot3.circuitbreaker.monitoring.health.CircuitBreakersHealthIndicator'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/micrometer/TimerTest.java","4","41","Unused static import 'java.time.ZonedDateTime.parse'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.springboot3.micrometer","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/micrometer/TimerTest.java","3","115","Avoid unused method parameters such as 'now'.","Best Practices","UnusedFormalParameter"
"1","io.github.resilience4j.springboot3.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/ratelimiter/RateLimiterAutoConfigurationTest.java","3","97","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.springboot3.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/ratelimiter/RateLimiterAutoConfigurationTest.java","3","124","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"3","io.github.resilience4j.springboot3.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/ratelimiter/RateLimiterAutoConfigurationTest.java","3","162","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"4","io.github.resilience4j.springboot3.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/ratelimiter/RateLimiterAutoConfigurationTest.java","3","189","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.ratelimiter.monitoring.health","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/ratelimiter/monitoring/health/RateLimitersHealthIndicatorTest.java","4","7","Unnecessary import from the current package 'io.github.resilience4j.springboot3.ratelimiter.monitoring.health.RateLimitersHealthIndicator'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/retry/RetryAutoConfigurationAsyncTest.java","3","245","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"1","io.github.resilience4j.springboot3.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/retry/RetryAutoConfigurationReactorTest.java","3","75","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/retry/RetryAutoConfigurationTest.java","3","89","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.springboot3.retry","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/retry/RetryAutoConfigurationTest.java","3","145","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.springboot3.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/service/test/BeanContextPropagator.java","3","13","Lambda expression could be written as a method reference: `Optional::empty`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.springboot3.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/service/test/ReactiveDummyService.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/service/test/ReactiveDummyServiceImpl.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.springboot3.service.test","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/service/test/TestApplication.java","3","40","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"1","io.github.resilience4j.springboot3.service.test.bulkhead","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/service/test/bulkhead/BulkheadDummyServiceImpl.java","3","16","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.springboot3.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-spring-boot3/src/test/java/io/github/resilience4j/springboot3/timelimiter/TimeLimiterAutoConfigurationTest.java","3","73","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-cloud2/src/test/java/io/github/resilience4j/bulkhead/autoconfigure/RefreshScopedBulkheadConfigurationTest.java","4","50","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"2","io.github.resilience4j.bulkhead.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-cloud2/src/test/java/io/github/resilience4j/bulkhead/autoconfigure/RefreshScopedBulkheadConfigurationTest.java","4","55","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.circuitbreaker.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-cloud2/src/test/java/io/github/resilience4j/circuitbreaker/autoconfigure/RefreshScopedCircuitBreakerConfigurationTest.java","4","50","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.ratelimiter.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-cloud2/src/test/java/io/github/resilience4j/ratelimiter/autoconfigure/RefreshScopedRateLimiterConfigurationTest.java","4","49","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.retry.autoconfigure","/workspaces/design-evaluation/resilience4j/resilience4j-spring-cloud2/src/test/java/io/github/resilience4j/retry/autoconfigure/RefreshScopedRetryConfigurationTest.java","4","49","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadAspect.java","1","97","The method parameter name 'Bulkhead' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","FormalParameterNamingConventions"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadAspect.java","3","97","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadAspect.java","3","209","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadAspect.java","3","242","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"5","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadAspect.java","3","245","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadConfiguration.java","4","41","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadConfiguration.java","3","153","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadConfiguration.java","3","167","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadConfiguration.java","3","173","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/BulkheadConfiguration.java","3","179","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/ReactorBulkheadAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/ReactorBulkheadAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/ReactorBulkheadAspectExt.java","2","65","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava2BulkheadAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava2BulkheadAspectExt.java","3","66","Avoid unused private methods such as 'executeRxJava2Aspect(BulkheadOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava2BulkheadAspectExt.java","2","83","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava3BulkheadAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava3BulkheadAspectExt.java","3","51","Avoid unused private methods such as 'executeRxJava3Aspect(BulkheadOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/bulkhead/configure/RxJava3BulkheadAspectExt.java","2","68","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerAspect.java","3","90","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerAspect.java","3","168","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java","4","39","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","92","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","105","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","111","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","117","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","4","41","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","4","41","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","2","69","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/RxJava2CircuitBreakerAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/RxJava2CircuitBreakerAspectExt.java","2","87","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/RxJava3CircuitBreakerAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/circuitbreaker/configure/RxJava3CircuitBreakerAspectExt.java","2","72","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/CompletionStageFallbackDecorator.java","3","71","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/DefaultFallbackDecorator.java","3","39","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/FallbackMethod.java","1","47","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/ReactorFallbackDecorator.java","3","67","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/RxJava2FallbackDecorator.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/RxJava2FallbackDecorator.java","3","76","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/RxJava3FallbackDecorator.java","4","19","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/RxJava3FallbackDecorator.java","3","76","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","4","18","Unused import 'io.github.resilience4j.fallback.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","41","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","47","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","53","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","59","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"6","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","65","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"7","io.github.resilience4j.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/fallback/configure/FallbackConfiguration.java","3","71","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterAspect.java","3","187","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java","4","40","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java","3","159","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java","3","172","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java","3","178","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfiguration.java","3","184","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/ReactorRateLimiterAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/ReactorRateLimiterAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/ReactorRateLimiterAspectExt.java","2","65","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","3","66","Avoid unused private methods such as 'executeRxJava2Aspect(RateLimiterOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","2","84","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","3","51","Avoid unused private methods such as 'executeRxJava3Aspect(RateLimiterOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","2","69","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/ReactorRetryAspectExt.java","4","39","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/ReactorRetryAspectExt.java","4","39","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/ReactorRetryAspectExt.java","2","64","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryAspect.java","3","99","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryAspect.java","3","189","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java","4","40","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java","3","157","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java","3","171","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java","3","177","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RetryConfiguration.java","3","183","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava2RetryAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava2RetryAspectExt.java","3","66","Avoid unused private methods such as 'executeRxJava2Aspect(RetryTransformer, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava2RetryAspectExt.java","2","83","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava3RetryAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava3RetryAspectExt.java","3","51","Avoid unused private methods such as 'executeRxJava3Aspect(RetryTransformer, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/retry/configure/RxJava3RetryAspectExt.java","2","68","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/RxJava2TimeLimiterAspectExt.java","4","21","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/RxJava2TimeLimiterAspectExt.java","3","58","Avoid unused private methods such as 'executeRxJava2Aspect(TimeLimiterTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/RxJava3TimeLimiterAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/RxJava3TimeLimiterAspectExt.java","3","42","Avoid unused private methods such as 'executeRxJava3Aspect(TimeLimiterTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/TimeLimiterAspect.java","3","142","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/timelimiter/configure/TimeLimiterConfiguration.java","4","41","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/utils/AnnotationExtractor.java","1","10","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/main/java/io/github/resilience4j/utils/AspectUtil.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/BulkheadDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/CircuitBreakerDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/RateLimiterDummyService.java","4","3","Unused import 'io.github.resilience4j.bulkhead.annotation.Bulkhead'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/RateLimiterDummyService.java","4","5","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/RetryDummyService.java","4","3","Unused import 'io.github.resilience4j.bulkhead.annotation.Bulkhead'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/RetryDummyService.java","4","5","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/TestDummyService.java","4","18","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/TestThreadLocalContextPropagator.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/TimeLimiterDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","4","Unused import 'io.github.resilience4j.bulkhead.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","50","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","111","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"4","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","174","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"5","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","228","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"6","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkHeadConfigurationTest.java","4","268","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadBuilderCustomizerTest.java","4","4","Unused import 'io.github.resilience4j.bulkhead.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","148","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"3","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","156","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"4","io.github.resilience4j.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","230","Lambda expression could be written as a method reference: `Optional::empty`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/circuitbreaker/configure/CircuitBreakerConfigurationTest.java","4","137","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackAspectTest.java","4","17","Unused import 'org.springframework.stereotype.Component'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackAspectTest.java","3","73","Avoid unused private methods such as 'fallback(RuntimeException)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackAspectTest.java","3","73","Avoid unused method parameters such as 'throwable'.","Best Practices","UnusedFormalParameter"
"1","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackMethodTest.java","1","103","The JUnit 4 test method name 'mismatchReturnType_shouldThrowNoSuchMethodException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"2","io.github.resilience4j.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/fallback/FallbackMethodTest.java","1","126","The JUnit 4 test method name 'notFoundFallbackMethod_shouldThrowsNoSuchMethodException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/ratelimiter/configure/RateLimiterAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/ratelimiter/configure/RateLimiterAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/ratelimiter/configure/RateLimiterConfigurationTest.java","4","143","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/ratelimiter/configure/RxJava2RateLimiterAspectExtTest.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/ratelimiter/configure/RxJava3RateLimiterAspectExtTest.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/retry/configure/RetryAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/retry/configure/RetryAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/retry/configure/RetryConfigurationTest.java","4","120","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spelresolver","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/spelresolver/DefaultSpelResolverTest.java","1","58","The JUnit 4 test method name 'givenNonSpelExpression_whenParse_returnsItself' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/ReactorTimeLimiterAspectExtTest.java","3","52","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","3","61","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/RxJava3TimeLimiterAspectExtTest.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/RxJava3TimeLimiterAspectExtTest.java","3","61","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/TimeLimiterAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/TimeLimiterAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/timelimiter/configure/TimeLimiterConfigurationTest.java","4","134","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/utils/AnnotationExtractorTest.java","1","28","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/utils/AnnotationExtractorTest.java","3","30","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/utils/AnnotationExtractorTest.java","1","34","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"4","io.github.resilience4j.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring/src/test/java/io/github/resilience4j/utils/AnnotationExtractorTest.java","3","36","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.java","1","97","The method parameter name 'Bulkhead' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","FormalParameterNamingConventions"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.java","3","97","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.java","3","209","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.java","3","242","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"5","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.java","3","245","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfiguration.java","4","41","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfiguration.java","3","138","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfiguration.java","3","152","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfiguration.java","3","158","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfiguration.java","3","164","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/ReactorBulkheadAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/ReactorBulkheadAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/ReactorBulkheadAspectExt.java","2","65","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava2BulkheadAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava2BulkheadAspectExt.java","3","66","Avoid unused private methods such as 'executeRxJava2Aspect(BulkheadOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava2BulkheadAspectExt.java","2","83","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava3BulkheadAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava3BulkheadAspectExt.java","3","51","Avoid unused private methods such as 'executeRxJava3Aspect(BulkheadOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava3BulkheadAspectExt.java","2","68","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerAspect.java","3","90","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerAspect.java","3","168","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfiguration.java","4","39","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","93","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","106","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","112","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfiguration.java","3","118","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","4","41","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","4","41","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.java","2","69","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/RxJava2CircuitBreakerAspectExt.java","4","21","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/RxJava2CircuitBreakerAspectExt.java","2","86","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/RxJava3CircuitBreakerAspectExt.java","4","6","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/circuitbreaker/configure/RxJava3CircuitBreakerAspectExt.java","2","71","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/CompletionStageFallbackDecorator.java","3","71","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/DefaultFallbackDecorator.java","3","39","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/FallbackMethod.java","1","47","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/ReactorFallbackDecorator.java","3","67","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/RxJava2FallbackDecorator.java","4","19","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/RxJava2FallbackDecorator.java","3","76","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/RxJava3FallbackDecorator.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/RxJava3FallbackDecorator.java","3","61","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/configure/FallbackConfiguration.java","4","18","Unused import 'io.github.resilience4j.spring6.fallback.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/configure/FallbackConfiguration.java","3","40","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.spring6.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/configure/FallbackConfiguration.java","3","46","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.spring6.fallback.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/fallback/configure/FallbackConfiguration.java","3","52","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/RxJava2TimerAspectExt.java","4","22","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/RxJava2TimerAspectExt.java","3","57","Avoid unused private methods such as 'executeRxJava2Aspect(TimerTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/RxJava3TimerAspectExt.java","4","6","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/RxJava3TimerAspectExt.java","3","41","Avoid unused private methods such as 'executeRxJava3Aspect(TimerTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/TimerAspect.java","3","125","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/micrometer/configure/TimerConfiguration.java","4","41","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterAspect.java","3","185","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfiguration.java","4","40","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfiguration.java","3","143","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfiguration.java","3","156","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfiguration.java","3","162","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfiguration.java","3","168","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/ReactorRateLimiterAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/ReactorRateLimiterAspectExt.java","4","40","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/ReactorRateLimiterAspectExt.java","2","65","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","3","66","Avoid unused private methods such as 'executeRxJava2Aspect(RateLimiterOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava2RateLimiterAspectExt.java","2","84","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","3","51","Avoid unused private methods such as 'executeRxJava3Aspect(RateLimiterOperator, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava3RateLimiterAspectExt.java","2","69","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/ReactorRetryAspectExt.java","4","39","Useless parentheses.","Code Style","UselessParentheses"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/ReactorRetryAspectExt.java","4","39","Useless parentheses.","Code Style","UselessParentheses"
"3","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/ReactorRetryAspectExt.java","2","64","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryAspect.java","3","99","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryAspect.java","3","189","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryConfiguration.java","4","40","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryConfiguration.java","3","143","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"3","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryConfiguration.java","3","157","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"4","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryConfiguration.java","3","163","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"5","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RetryConfiguration.java","3","169","Avoid the use of value in annotations when its the only element","Code Style","UnnecessaryAnnotationValueElement"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava2RetryAspectExt.java","4","21","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava2RetryAspectExt.java","3","65","Avoid unused private methods such as 'executeRxJava2Aspect(RetryTransformer, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava2RetryAspectExt.java","2","82","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava3RetryAspectExt.java","4","6","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava3RetryAspectExt.java","3","50","Avoid unused private methods such as 'executeRxJava3Aspect(RetryTransformer, Object)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/retry/configure/RxJava3RetryAspectExt.java","2","67","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExt.java","4","21","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExt.java","3","58","Avoid unused private methods such as 'executeRxJava2Aspect(TimeLimiterTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava3TimeLimiterAspectExt.java","4","5","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava3TimeLimiterAspectExt.java","3","42","Avoid unused private methods such as 'executeRxJava3Aspect(TimeLimiterTransformer, Object, String)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterAspect.java","3","142","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterConfiguration.java","4","41","Unused import 'org.springframework.context.annotation.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/utils/AnnotationExtractor.java","1","10","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/main/java/io/github/resilience4j/spring6/utils/AspectUtil.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/BulkheadDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/CircuitBreakerDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/RateLimiterDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/RetryDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/TestDummyService.java","4","18","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/TestThreadLocalContextPropagator.java","1","31","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.spring6","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/TimeLimiterDummyService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","4","Unused import 'io.github.resilience4j.bulkhead.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","50","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","111","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"4","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","174","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"5","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","228","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"6","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkHeadConfigurationTest.java","4","268","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadBuilderCustomizerTest.java","4","4","Unused import 'io.github.resilience4j.bulkhead.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","148","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"3","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","156","This call to Collection.toArray() may be optimizable","Performance","OptimizableToArrayCall"
"4","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/BulkheadBuilderCustomizerTest.java","3","230","Lambda expression could be written as a method reference: `Optional::empty`","Code Style","LambdaCanBeMethodReference"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/ReactorBulkheadAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.bulkhead.configure.ReactorBulkheadAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.bulkhead.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/bulkhead/configure/RxJava2BulkheadAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.bulkhead.configure.RxJava2BulkheadAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfigurationTest.java","4","12","Unnecessary import from the current package 'io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfiguration'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfigurationTest.java","4","13","Unnecessary import from the current package 'io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfigurationTest.java","4","139","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/ReactorCircuitBreakerAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.circuitbreaker.configure.ReactorCircuitBreakerAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.circuitbreaker.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/circuitbreaker/configure/RxJava2CircuitBreakerAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.circuitbreaker.configure.RxJava2CircuitBreakerAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackAspectTest.java","4","18","Unused import 'org.springframework.stereotype.Component'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackAspectTest.java","3","72","Avoid unused private methods such as 'fallback(RuntimeException)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackAspectTest.java","3","72","Avoid unused method parameters such as 'throwable'.","Best Practices","UnusedFormalParameter"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackExecutorTest.java","4","4","Unnecessary import from the current package 'io.github.resilience4j.spring6.fallback.FallbackDecorators'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackExecutorTest.java","4","5","Unnecessary import from the current package 'io.github.resilience4j.spring6.fallback.FallbackExecutor'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackMethodTest.java","1","103","The JUnit 4 test method name 'mismatchReturnType_shouldThrowNoSuchMethodException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"2","io.github.resilience4j.spring6.fallback","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/fallback/FallbackMethodTest.java","1","126","The JUnit 4 test method name 'notFoundFallbackMethod_shouldThrowsNoSuchMethodException' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.spring6.micrometer.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/RxJava3TimerTest.java","3","59","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/DefaultTimedService.java","3","57","Avoid unused private methods such as 'fallback(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"2","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/DefaultTimedService.java","3","61","Avoid unused private methods such as 'fallbackCompletionStage(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/ReactorTimedService.java","3","54","Avoid unused private methods such as 'fallbackMono(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"2","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/ReactorTimedService.java","3","58","Avoid unused private methods such as 'fallbackFlux(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","4","4","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","116","Avoid unused private methods such as 'fallbackCompletable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","116","Avoid unused method parameters such as 'e'.","Best Practices","UnusedFormalParameter"
"4","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","120","Avoid unused private methods such as 'fallbackSingle(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"5","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","124","Avoid unused private methods such as 'fallbackMaybe(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"6","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","128","Avoid unused private methods such as 'fallbackObservable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"7","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava2TimedService.java","3","132","Avoid unused private methods such as 'fallbackFlowable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","116","Avoid unused private methods such as 'fallbackCompletable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"3","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","116","Avoid unused method parameters such as 'e'.","Best Practices","UnusedFormalParameter"
"4","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","120","Avoid unused private methods such as 'fallbackSingle(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"5","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","124","Avoid unused private methods such as 'fallbackMaybe(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"6","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","128","Avoid unused private methods such as 'fallbackObservable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"7","io.github.resilience4j.spring6.micrometer.configure.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/micrometer/configure/utils/RxJava3TimedService.java","3","132","Avoid unused private methods such as 'fallbackFlowable(IllegalStateException)'.","Best Practices","UnusedPrivateMethod"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfigurationTest.java","4","11","Unnecessary import from the current package 'io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfiguration'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfigurationTest.java","4","12","Unnecessary import from the current package 'io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfigurationTest.java","4","145","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/ReactorRateLimiterAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.ratelimiter.configure.ReactorRateLimiterAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava2RateLimiterAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.ratelimiter.configure.RxJava2RateLimiterAspectExt'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava2RateLimiterAspectExtTest.java","4","20","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.ratelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/ratelimiter/configure/RxJava3RateLimiterAspectExtTest.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/ReactorRetryAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.retry.configure.ReactorRetryAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RetryAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RetryAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RetryConfigurationTest.java","4","12","Unnecessary import from the current package 'io.github.resilience4j.spring6.retry.configure.RetryConfiguration'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RetryConfigurationTest.java","4","13","Unnecessary import from the current package 'io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RetryConfigurationTest.java","4","122","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spring6.retry.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/retry/configure/RxJava2RetryAspectExtTest.java","4","19","Unnecessary import from the current package 'io.github.resilience4j.spring6.retry.configure.RxJava2RetryAspectExt'","Code Style","UnnecessaryImport"
"1","io.github.resilience4j.spring6.spelresolver","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/spelresolver/DefaultSpelResolverTest.java","1","58","The JUnit 4 test method name 'givenNonSpelExpression_whenParse_returnsItself' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","MethodNamingConventions"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/ReactorTimeLimiterAspectExtTest.java","4","3","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.IllegalReturnTypeException'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/ReactorTimeLimiterAspectExtTest.java","4","4","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.ReactorTimeLimiterAspectExt'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/ReactorTimeLimiterAspectExtTest.java","3","54","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","4","3","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.IllegalReturnTypeException'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","4","4","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.RxJava2TimeLimiterAspectExt'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","4","6","Unused import 'io.reactivex.*'","Code Style","UnnecessaryImport"
"4","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava2TimeLimiterAspectExtTest.java","3","63","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava3TimeLimiterAspectExtTest.java","4","4","Unused import 'io.reactivex.rxjava3.core.*'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/RxJava3TimeLimiterAspectExtTest.java","3","61","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterAspectSpelResolverTest.java","3","42","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterAspectSpelResolverTest.java","3","44","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterConfigurationTest.java","4","10","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfiguration'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterConfigurationTest.java","4","11","Unnecessary import from the current package 'io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties'","Code Style","UnnecessaryImport"
"3","io.github.resilience4j.spring6.timelimiter.configure","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterConfigurationTest.java","4","136","Unnecessary qualifier 'Collections': 'emptyList' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"1","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/utils/AnnotationExtractorTest.java","4","4","Unnecessary import from the current package 'io.github.resilience4j.spring6.utils.AnnotationExtractor'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/utils/AnnotationExtractorTest.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/utils/AnnotationExtractorTest.java","3","31","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"4","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/utils/AnnotationExtractorTest.java","1","35","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"5","io.github.resilience4j.spring6.utils","/workspaces/design-evaluation/resilience4j/resilience4j-spring6/src/test/java/io/github/resilience4j/spring6/utils/AnnotationExtractorTest.java","3","37","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.test","/workspaces/design-evaluation/resilience4j/resilience4j-test/src/main/java/io/github/resilience4j/test/RxJava2Adapter.java","3","12","This utility class has a non-private constructor","Design","UseUtilityClass"
"1","io.github.resilience4j.test","/workspaces/design-evaluation/resilience4j/resilience4j-test/src/main/java/io/github/resilience4j/test/TestContextPropagators.java","3","30","Class cannot be instantiated and does not provide any static methods or fields","Error Prone","MissingStaticMethodInNonInstantiatableClass"
"2","io.github.resilience4j.test","/workspaces/design-evaluation/resilience4j/resilience4j-test/src/main/java/io/github/resilience4j/test/TestContextPropagators.java","1","30","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.test","/workspaces/design-evaluation/resilience4j/resilience4j-test/src/main/java/io/github/resilience4j/test/TestContextPropagators.java","1","87","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/TimeLimiterConfig.java","1","8","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/TimeLimiterConfig.java","3","66","Document empty constructor","Documentation","UncommentedEmptyConstructor"
"1","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/internal/TimeLimiterImpl.java","3","65","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"2","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/internal/TimeLimiterImpl.java","3","67","Thrown exception does not preserve the stack trace of exception 'e' on all code paths","Best Practices","PreserveStackTrace"
"3","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/internal/TimeLimiterImpl.java","2","166","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"4","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/main/java/io/github/resilience4j/timelimiter/internal/TimeLimiterImpl.java","2","168","Logger calls should be surrounded by log level guards.","Best Practices","GuardLogStatement"
"1","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterEventPublisherTest.java","3","98","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","55","The local variable name 'TimeLimiter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"2","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","68","The local variable name 'TimeLimiter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"3","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","77","The local variable name 'TimeLimiter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"4","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","88","The local variable name 'TimeLimiter' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"5","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","91","The local variable name 'TimeLimiter2' doesn't match '[a-z][a-zA-Z0-9]*'","Code Style","LocalVariableNamingConventions"
"6","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","1","204","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"7","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","3","208","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"8","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","3","212","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"9","io.github.resilience4j.timelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/TimeLimiterRegistryTest.java","3","216","Document empty method body","Documentation","UncommentedEmptyMethodBody"
"1","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/internal/TimeLimiterTest.java","3","66","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"2","io.github.resilience4j.timelimiter.internal","/workspaces/design-evaluation/resilience4j/resilience4j-timelimiter/src/test/java/io/github/resilience4j/timelimiter/internal/TimeLimiterTest.java","3","131","Avoid empty catch blocks","Error Prone","EmptyCatchBlock"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/core/VavrCheckedFunctionUtils.java","4","26","Unused import 'java.util.function.BiFunction'","Code Style","UnnecessaryImport"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/core/VavrCheckedFunctionUtils.java","1","29","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"3","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/core/VavrCheckedFunctionUtils.java","3","49","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"4","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/core/VavrCheckedFunctionUtils.java","3","70","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"5","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/core/VavrCheckedFunctionUtils.java","3","138","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/decorators/VavrDecorators.java","1","54","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"2","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/decorators/VavrDecorators.java","4","83","Unnecessary qualifier 'VavrDecorators': 'ofCheckedFunction' is already in scope","Code Style","UnnecessaryFullyQualifiedName"
"3","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/decorators/VavrDecorators.java","1","125","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"4","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/decorators/VavrDecorators.java","1","173","This class has only private constructors and may be final","Design","ClassWithOnlyPrivateConstructorsShouldBeFinal"
"1","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/metrics/VavrTimer.java","3","42","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"2","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/metrics/VavrTimer.java","3","62","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"3","io.github.resilience4j.metrics","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/main/java/io/github/resilience4j/metrics/VavrTimer.java","3","84","A catch statement should never catch throwable since it includes errors.","Error Prone","AvoidCatchingThrowable"
"1","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/test/java/io/github/resilience4j/core/VavrCheckedFunctionUtilsTest.java","3","63","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"2","io.github.resilience4j.core","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/test/java/io/github/resilience4j/core/VavrCheckedFunctionUtilsTest.java","3","95","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.decorators","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/test/java/io/github/resilience4j/decorators/VavrDecoratorsTest.java","3","60","Position literals first in String comparisons","Best Practices","LiteralsFirstInComparisons"
"1","io.github.resilience4j.ratelimiter","/workspaces/design-evaluation/resilience4j/resilience4j-vavr/src/test/java/io/github/resilience4j/ratelimiter/VavrRateLimiterTest.java","3","45","Perhaps 'config' could be replaced by a local variable.","Design","SingularField"
